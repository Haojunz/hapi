exit
exit()
import smbus
bus = smbus.SMBus(1)
bus.wirte_byte(0x40,0xf3)
bus.write_byte(0x40,0xf3)
bus.read_i2c)block_data(0x40,0xe0,2)
bus.read_i2c_block_data(0x40,0xe0,2)
bus.write_byte(0x40,0xf3)
bus.read_i2c_block_data(0x40,0xe0,2)
bus.read_i2c_block_data(0x40)
ap_if = network.WLAN(network.AP_IF)
import paho.mqtt.client as mqtt
client = mqtt.Client()
client.connect("test.mosquitto.org",port=1883)
client.publish("IC.embedded/HAGI/test","hello")
client.publish("IC.embedded/HAGI/test"," ")
mqtt.error_string(MSG_INFO.rc) #MSG_INFO
mqtt.error_string(MSG_INFO.rc)
client.publish("IC.embedded/HAGI/test","123")
client.publish("IC.embedded/HAGI/test","123456")
import paho.mqtt.client as mqtt
client = mqtt.Client()
client.connect("test.mosquitto.org",port=1883)
client.publish("IC.embedded/GROUP_NAME/test","hello")
client.publish("IC.embedded/HAGI/test","hello")
mqtt.error_string(0xb6495b40.rc)
mqtt.error_string)
client.publish("IC.embedded/HAGI/test","hello")
client.publish("IC.embedded/HAGI/test","258")
mqtt.error_string(0xb6495ba0.rc)
import paho.mqtt.client as mqtt
client = mqtt.Client()
client.connect("test.mosquitto.org",port=1883)
client.publish("IC.embedded/GROUP_NAME/test","123")
client.publish("IC.embedded/HAGI/test","123")
mqtt.error_string("123".rc)
client.publish("IC.embedded/HAGI/test","123")
import paho.mqtt.client as mqtt
 client = mqtt.Client()
client = mqtt.Client()
client.tls_set(ca_certs="mosquitto.org.crt",certfile="client.crt",keyfile="client.key")
client.connect("test.mosquitto.org",port=8884)
client.publish("IC.embedded/GROUP_NAME/test","hello")
mqtt.error_string(<paho.mqtt.client.MQTTMessageInfo object at 0xb6406de0>.rc)
mqtt.error_string(paho.mqtt.client.MQTTMessageInfo object at 0xb6406de0.rc)
fzd=client.publish("IC.embedded/GROUP_NAME/test","hello")
mqtt.error_string(fzd.rc)
client.publish("IC.embedded/HAGI/test","hello")
import smbus
bus = smbus.SMBus(1)
bus.read(0x40)
bus.read_byte(0x40)
data = bus.read_i2c_block_data(0x40,0)
print(data)
data = bus.read_i2c_block_data(0x40,2)
print(data)
data = bus.read_i2c_block_data(0x40,0,7)
print(data)
data = bus.read_byte_data(0x40,1)
print(data)
data = bus.read_byte_data(0x40,1)
print(data)
data = bus.read_byte_data(0x40,1)
print(data)
data = bus.read_byte_data(0x40,1)
print(data)
data = bus.read_byte_data(0x40,1)
print(data)
data = bus.read_byte_data(0x40,1)
print(data)
import smbus
bus = smbus.SMBus(1)
bus.wirte_byte(0x40,0xf3)
bus.write_byte(0x40,0xf3)
data = bus.read_byte(0x40,1)
data = bus.read_byte(0x40,)
data = bus.read_byte(0x40)
print(data)
bus.write_byte(0x40,0x3)
data = bus.read_byte(0x40)
print(data)
bus.write_byte(0x40,0x13)
data = bus.read_byte(0x40)
print(data)
bus.write_byte(0x40,0x23)
data = bus.read_byte(0x40)
print(data)
data = bus.read_byte(0x40)
print(data)
bus.write_byte(0x40,0x33)
data = bus.read_byte(0x40)
print(data)
bus.read_byte(0x40)
import smbus
b = smbus.SMBus(1)
b.read_byte(0x18)
import smbus
b = smbus.SMBus(1)
b.read_byte(0x19)
b.read_byte(0x18)
b.write_byte(0x18,0xf3)
b.read_byte(0x18)
import smbus
b.read_byte(0x18)
b = smbus.SMBus(1)
import smbus
b = smbus.SMBus(1)
b.read_i2c_block_data(0x40,2)
b.read_i2c_block_data(0x40,2,2)
b.read_i2c_block_data(0x40,3,3)
b.read_i2c_block_data(0x40,2,2)
b.read_i2c_block_data(0x40,4,4)
b.read_i2c_block_data(0x40,3,3)
b.read_i2c_block_data(0x40,4,4)
b.read_i2c_block_data(0x40,3,3)
b.read_i2c_block_data(0x40,0xe0,2)
b.read_i2c_block_data(0x40,2,2)
data=b.read_i2c_block_data(0x40,2,2)
int.from_bytes(data,'big')
data
data=b.read_i2c_block_data(0x40,0x03,2)
b.read_i2c_block_data(0x40,0x03,2)
int.from_bytes(b'136','big')
int.from_bytes(136,'big')
b.read_i2c_block_data(0x40,0x06,2)
b.read_i2c_block_data(0x40,0x07,2)
b.read_i2c_block_data(0x40,0x07,3)
b.read_i2c_block_data(0x40,0x06,3)
b.read_i2c_block_data(0x40,0x07,3)
import smbus
x,y,z = bus.read_i2c_block_data(0x18,0x28,6)
bus = smbus.SMBus(1)
x,y,z = bus.read_i2c_block_data(0x18,0x28,6)
xyz = bus.read_i2c_block_data(0x18,0x28,6)
print(xyz)
xyz = bus.read_i2c_block_data(0x18,0x28,6)
print(xyz)
xyz = bus.read_i2c_block_data(0x18,0x28,6)
print(xyz)
xyz = bus.read_i2c_block_data(0x18,0x28,6)
print(xyz)
import smbus
bus = smbus.SMBus(1)
x = bus.read_i2c_block_data(0x18,0x00,2)
x
x = bus.read_i2c_block_data(0x18,0x00,2)
x
x = bus.read_i2c_block_data(0x18,0x00,2)
x
x = bus.read_i2c_block_data(0x18,0x00,2)
x
x = bus.read_i2c_block_data(0x18,0x00,2)
x
x = bus.read_i2c_block_data(0x18,0x00,2)
x
import paho.mqtt.client as mqtt
client = mqtt.Client()
client.connect("ee-estott-octo.ee.ic.ac.uk",port=1883)
